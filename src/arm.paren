(defun make-arm (length center-angle rotation-range phase-offset)
  (create x 0
          y 0
          length length
          angle 0
          center-angle center-angle
          rotation-range rotation-range
          parent null
          phase-offset phase-offset))

(defun arm-end-x (arm)
  (with-slots (x angle length parent) arm
    (let ((angle angle)
          (parent parent))
      (do ()
          ((null parent) (+ x (* (cos angle) length)))
        (incf angle (@ parent angle))
        (setf parent (@ parent parent))))))

(defun arm-end-y (arm)
  (with-slots (y angle length parent) arm
    (let ((angle angle)
          (parent parent))
      (do ()
          ((null parent) (+ y (* (sin angle) length)))
        (incf angle (@ parent angle))
        (setf parent (@ parent parent))))))

(defsetf arm-phase (arm) (phase)
  `(with-slots (angle center-angle rotation-range phase-offset) arm
     (setf angle (+ center-angle (* (sin (+ phase phase-offset)) rotation-range)))))

(exports make-arm arm-end-x arm-end-y)
